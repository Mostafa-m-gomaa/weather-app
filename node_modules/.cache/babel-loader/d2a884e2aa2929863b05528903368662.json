{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Mostafa Gomaa\\\\Documents\\\\weather_app\\\\src\\\\App.js\";\nimport { Component } from 'react';\nimport './App.css';\nimport Data from './components/data/data';\nimport Form from './components/form/form';\n\n// let apiKey=\"8d6762299e06b3918211ecd77c84893d\"\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass App extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      country: \"\",\n      city: \"\",\n      temp: \"\",\n      humidity: \"\",\n      description: \"\",\n      error: \"\"\n    };\n    this.getWeather = async e => {\n      e.preventDefault();\n      const country = e.target.elements.country.value;\n      const city = e.target.elements.city.value;\n      const api = await fetch(`http://api.openweathermap.org/data/2.5/weather?q=${city}%2C${country}&appid=e36ed364400282e43250b6c4c0274d44`);\n      const data = await api.json();\n      if (city && country) {\n        this.setState({\n          country: data.sys.country,\n          city: data.name,\n          temp: data.main.temp,\n          humidity: data.main.humidity,\n          description: data.weather[0].description,\n          error: \"\"\n        });\n      } else {\n        this.setState({\n          country: \"\",\n          city: \"\",\n          temp: \"\",\n          humidity: \"\",\n          description: \"\",\n          error: \"wrong data\"\n        });\n      }\n    };\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Get Weather App\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        getWeather: this.getWeather\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Data, {\n        country: this.state.country,\n        city: this.state.city,\n        temp: this.state.temp,\n        humidity: this.state.humidity,\n        description: this.state.description,\n        error: this.state.error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default App;","map":{"version":3,"names":["Component","Data","Form","App","state","country","city","temp","humidity","description","error","getWeather","e","preventDefault","target","elements","value","api","fetch","data","json","setState","sys","name","main","weather","render"],"sources":["C:/Users/Mostafa Gomaa/Documents/weather_app/src/App.js"],"sourcesContent":["import { Component } from 'react';\nimport './App.css';\nimport Data from './components/data/data';\nimport Form from './components/form/form';\n\n// let apiKey=\"8d6762299e06b3918211ecd77c84893d\"\n\nclass App extends Component{\n  state={\n    country:\"\",\n    city:\"\",\n    temp:\"\",\n    humidity:\"\",\n    description:\"\",\n    error:\"\"\n\n  }\n\ngetWeather= async (e)=>{\ne.preventDefault();\nconst country=e.target.elements.country.value\nconst city=e.target.elements.city.value\n\nconst api= await fetch(`http://api.openweathermap.org/data/2.5/weather?q=${city}%2C${country}&appid=e36ed364400282e43250b6c4c0274d44`);\nconst data= await api.json()\nif(city && country){\n  this.setState({\n \n    country:data.sys.country,\n    city:data.name,\n    temp:data.main.temp,\n    humidity:data.main.humidity,\n    description:data.weather[0].description,\n    error:\"\"\n  })\n}\nelse{\n  this.setState({\n    country:\"\",\n    city:\"\",\n    temp:\"\",\n    humidity:\"\",\n    description:\"\",\n    error:\"wrong data\"\n  })\n}\n}\n\n\n  render(){\n    return (\n      <div className=\"App\">\n        <h2>Get Weather App</h2>\n        <Form getWeather={this.getWeather} />\n        <Data \n        country={this.state.country}\n        city={this.state.city}\n        temp={this.state.temp}\n        humidity={this.state.humidity}\n        description={this.state.description}\n        error={this.state.error}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,OAAO;AACjC,OAAO,WAAW;AAClB,OAAOC,IAAI,MAAM,wBAAwB;AACzC,OAAOC,IAAI,MAAM,wBAAwB;;AAEzC;AAAA;AAEA,MAAMC,GAAG,SAASH,SAAS;EAAA;IAAA;IAAA,KACzBI,KAAK,GAAC;MACJC,OAAO,EAAC,EAAE;MACVC,IAAI,EAAC,EAAE;MACPC,IAAI,EAAC,EAAE;MACPC,QAAQ,EAAC,EAAE;MACXC,WAAW,EAAC,EAAE;MACdC,KAAK,EAAC;IAER,CAAC;IAAA,KAEHC,UAAU,GAAE,MAAOC,CAAC,IAAG;MACvBA,CAAC,CAACC,cAAc,EAAE;MAClB,MAAMR,OAAO,GAACO,CAAC,CAACE,MAAM,CAACC,QAAQ,CAACV,OAAO,CAACW,KAAK;MAC7C,MAAMV,IAAI,GAACM,CAAC,CAACE,MAAM,CAACC,QAAQ,CAACT,IAAI,CAACU,KAAK;MAEvC,MAAMC,GAAG,GAAE,MAAMC,KAAK,CAAE,oDAAmDZ,IAAK,MAAKD,OAAQ,yCAAwC,CAAC;MACtI,MAAMc,IAAI,GAAE,MAAMF,GAAG,CAACG,IAAI,EAAE;MAC5B,IAAGd,IAAI,IAAID,OAAO,EAAC;QACjB,IAAI,CAACgB,QAAQ,CAAC;UAEZhB,OAAO,EAACc,IAAI,CAACG,GAAG,CAACjB,OAAO;UACxBC,IAAI,EAACa,IAAI,CAACI,IAAI;UACdhB,IAAI,EAACY,IAAI,CAACK,IAAI,CAACjB,IAAI;UACnBC,QAAQ,EAACW,IAAI,CAACK,IAAI,CAAChB,QAAQ;UAC3BC,WAAW,EAACU,IAAI,CAACM,OAAO,CAAC,CAAC,CAAC,CAAChB,WAAW;UACvCC,KAAK,EAAC;QACR,CAAC,CAAC;MACJ,CAAC,MACG;QACF,IAAI,CAACW,QAAQ,CAAC;UACZhB,OAAO,EAAC,EAAE;UACVC,IAAI,EAAC,EAAE;UACPC,IAAI,EAAC,EAAE;UACPC,QAAQ,EAAC,EAAE;UACXC,WAAW,EAAC,EAAE;UACdC,KAAK,EAAC;QACR,CAAC,CAAC;MACJ;IACA,CAAC;EAAA;EAGCgB,MAAM,GAAE;IACN,oBACE;MAAK,SAAS,EAAC,KAAK;MAAA,wBAClB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAwB,eACxB,QAAC,IAAI;QAAC,UAAU,EAAE,IAAI,CAACf;MAAW;QAAA;QAAA;QAAA;MAAA,QAAG,eACrC,QAAC,IAAI;QACL,OAAO,EAAE,IAAI,CAACP,KAAK,CAACC,OAAQ;QAC5B,IAAI,EAAE,IAAI,CAACD,KAAK,CAACE,IAAK;QACtB,IAAI,EAAE,IAAI,CAACF,KAAK,CAACG,IAAK;QACtB,QAAQ,EAAE,IAAI,CAACH,KAAK,CAACI,QAAS;QAC9B,WAAW,EAAE,IAAI,CAACJ,KAAK,CAACK,WAAY;QACpC,KAAK,EAAE,IAAI,CAACL,KAAK,CAACM;MAAM;QAAA;QAAA;QAAA;MAAA,QACtB;IAAA;MAAA;MAAA;MAAA;IAAA,QACE;EAEV;AACF;AAEA,eAAeP,GAAG"},"metadata":{},"sourceType":"module"}